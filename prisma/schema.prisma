// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model coustmer {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  user    String @db.ObjectId
  photo   String
  name    String
  address String
  email   String
  phone   Int
  notes   String
}

model Team {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  user      String     @db.ObjectId
  photo     String
  name      String
  job_title String
  email     String
  phone     Int
  color     String
  schedule  Schedule[]
  access    Access[]
}

model Schedule {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  team    Team   @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  team_id String @db.ObjectId
  day     String
  from    String
  to      String
}

model Access {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  team    Team    @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  team_id String  @db.ObjectId
  api     String
  view    Boolean @default(false)
  edit    Boolean @default(false)
  add     Boolean @default(false)
}

model Work_order {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  user           String  @db.ObjectId
  date           String
  from           String
  to             String
  coustmer_name  String
  note           String?
  through        String
  service_name   String
  order_location String
  order_duration String
  order_occuring String
  order_note     String
  assign         Json?
  subtotal       String
  discount       String
  tax            String
  total          String
  items          Items  []
}

model Items {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  price  String
  per    String
  Work   Work_order @relation(fields: [WorkId], references: [id])
  WorkId String     @db.ObjectId
}

model Services {
    id               String             @id @default(auto()) @map("_id") @db.ObjectId
    user             String             @db.ObjectId
    ServicesName     String
    Description      String
    Color            String
    Photo            String
    term             Term[]
    AvailableDays    AvailableDays[]
    Location         Location[]
    Coustmer_details Coustmer_details[]
    QuestionSchema   QuestionSchema[]
    assignTo         assignTo[]
    Estimate         Estimate[]
}

model Term {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    service    Services @relation(fields: [serviceId], references: [id])
    serviceId  String   @db.ObjectId
    ContractId String   @db.ObjectId
    Radio      Boolean
    Notes      String
}

model AvailableDays {
    id            String   @id @default(auto()) @map("_id") @db.ObjectId
    service       Services @relation(fields: [serviceId], references: [id])
    serviceId     String   @db.ObjectId
    Days          Json?
    From          String
    To            String
    rangeRadio    Boolean
    rangeTime     String?
    Recurring     Boolean
    RecurringTime String?
}

model Location {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    service           Services @relation(fields: [serviceId], references: [id])
    serviceId         String   @db.ObjectId
    arrayOfObjCountry Json?
}

model Coustmer_details {
    id            String   @id @default(auto()) @map("_id") @db.ObjectId
    service       Services @relation(fields: [serviceId], references: [id])
    serviceId     String   @db.ObjectId
    detailsTitle  String
    Checkbox      String
    Question_type String
}

model QuestionSchema {
    id                  String   @id @default(auto()) @map("_id") @db.ObjectId
    service             Services @relation(fields: [serviceId], references: [id])
    serviceId           String   @db.ObjectId
    questionText        String
    questionDescription String
    optionName          String
    Radio               Boolean
}

model assignTo {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    service   Services @relation(fields: [serviceId], references: [id])
    serviceId String   @db.ObjectId
    Assign    Json?
}

model Estimate {
    id                   String   @id @default(auto()) @map("_id") @db.ObjectId
    service              Services @relation(fields: [serviceId], references: [id])
    serviceId            String   @db.ObjectId
    Customer_will_select String
    Services_obj             Json?
    Discount             String
    Tax                  String
    Recurring            Boolean
    Discount_per_time    String
}
